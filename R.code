#____________________________________________________________________________________________
                                             #Packages  
#____________________________________________________________________________________________

#Biostrings 
#BiocManager 
#dbplyr
#DECHIPHER
#dplyr
#ggplot2
#msa
#purr
#tidyverse

#____________________________________________________________________________________________
                                            #Pre-Analysis  
#____________________________________________________________________________________________

#Load MSA
tropomyosin_msa <- readAAStringSet("~/Documents/School/Fall 2024/BIOL 469/Genomics Final Project /Final Work /Tropomyosin_MSA_Edit .fst")

#Separate MSAs 
allergenic_msa <- tropomyosin_msa [1:18]
non_allergenic_msa <- tropomyosin_msa [19:34]

#make allergenic and non allergenic formats into usable formats 

allergenic_matrix <- as.matrix(allergenic_msa)
non_allergenic_matrix <- as.matrix(non_allergenic_msa) 

#read in BLOUSM62
BLOUSM62 <- data("BLOSUM62")

#Define Gap score 
gap_score <- -1

#load helper fucntions 
source("~/Documents/School/Fall 2024/BIOL 469/Genomics Final Project /Final Work /Helper Fucntions.R")


#Build a allergenic consensus sequence to determine what vertabrate form is most similar for comparison 
Allergenic_consensus <- consensus_sequence(allergenic_msa, threshold = 0.80)

# Remove all gaps ("-") - not informative - took longest isoforms
filtered_consensus <- gsub("-", "", Allergenic_consensus)

print(filtered_consensus)

#____________________________________________________________________________________________
                                        #Analysis 
#____________________________________________________________________________________________

#Residue Composition allergenic vs non allergenic 

Residue_composition <- (compare_residue_composition(allergenic_msa, non_allergenic_msa))
Residue_composition$Plot


#Differential Conservation 

Conservation_diffrences <- differential_conservation_analysis(allergenic_msa, non_allergenic_msa)
Conservation_diffrences$Plot



#____________________________________________________________________________________________
          #Assessing biochemical significance of different most common residue 
#____________________________________________________________________________________________


#Blousm Score between position whit different most common base 

#Calculate conservation, and store values for the next fucnion 
result_allergenic <- calculate_conservation(allergenic_msa)
results_non_allergenic <- calculate_conservation(non_allergenic_msa)

#Store Conservation scores for each MSA 
allergenic_conservation <- result_allergenic$Conservation
non_allergenic_conservation <- results_non_allergenic$Conservation

#Store common bases for each MSA 
allergenic_common_residues <- result_allergenic$CommonResidues
non_allergenic_common_residues <- results_non_allergenic$CommonResidues

#store most common residue frequency for each MSA 
allergenic_common_residues_frequency <- result_allergenic$MostCommonFrequencies
non_allergenic_common_residues_frequency <- results_non_allergenic$MostCommonFrequencies

#Plot the BLOUSM62 scores at positions with different most common residues 
Different_base_compostion_BLOUSM <- differential_base_analysis(allergenic_conservation, allergenic_common_residues,
                                                               non_allergenic_conservation, non_allergenic_common_residues,
                                                               BLOSUM62)
Different_base_compostion_BLOUSM$Plot

#____________________________________________________________________________________________
             #Filter on Positions in different bases and extract surrounding regions 
#____________________________________________________________________________________________


#build data frame for analysis 

Significant_positions <- data.frame(
  Position = seq_len(ncol(allergenic_matrix)), 
  Allergenic_Common_Residue = allergenic_common_residues,
  Non_Allergenic_Common_Residue = non_allergenic_common_residues,
  Allergenic_frequecny = allergenic_common_residues_frequency,
  Non_allergenic_frequency = non_allergenic_common_residues_frequency,
  Base_match = allergenic_common_residues == non_allergenic_common_residues  # TRUE if residues match, FALSE otherwise
) |> #remove gaps and select where most common residue is different 
  filter(Base_match == FALSE & Allergenic_Common_Residue != "-" & Non_Allergenic_Common_Residue != "-") |>
  mutate(
    Allergenic_Unique_Residues = map_int(Position, ~ n_distinct(allergenic_matrix[, .])),
    Non_Allergenic_Unique_Residues = map_int(Position, ~ n_distinct(non_allergenic_matrix[, .]))
  ) |> #add BLOUSM62 
  mutate(
    BLOSUM62_Score = mapply(function(allergenic_residue, non_allergenic_residue) {
      if (allergenic_residue %in% colnames(BLOSUM62) && non_allergenic_residue %in% rownames(BLOSUM62)) {
        BLOSUM62[allergenic_residue, non_allergenic_residue]
      } else {
        NA  # Handle cases where the residue is missing in BLOSUM62
      }
    }, Allergenic_Common_Residue, Non_Allergenic_Common_Residue)
  ) |>
  # Calculate Weighted Score
  mutate(
    Weighted_Score = Allergenic_frequecny * BLOSUM62_Score
  ) 

score_threshold <-quantile(Significant_positions$Weighted_Score, 0.25, na.rm = TRUE)


#Background frquencis of amino acids 
aa_background_frequencies <- c(
  A = 8.93 / 100, Q = 3.82 / 100, L = 9.81 / 100, S = 6.91 / 100,
  R = 5.84 / 100, E = 6.26 / 100, K = 4.96 / 100, T = 5.56 / 100,
  N = 3.81 / 100, G = 7.22 / 100, M = 2.33 / 100, W = 1.30 / 100,
  D = 5.47 / 100, H = 2.23 / 100, F = 3.88 / 100, Y = 2.87 / 100,
  C = 1.31 / 100, I = 5.50 / 100, P = 5.03 / 100, V = 6.84 / 100
)

# Add p-value calculation using background frequencies

Significant_positions <- Add_p_values(Significant_positions, allergenic_matrix, non_allergenic_matrix)

#sliding window analysis 

Significant_sequences_df <- sliding_window_analysis(Significant_positions, allergenic_common_residues, window_size, score_threshold)
